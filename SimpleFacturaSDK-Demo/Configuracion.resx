<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="guardar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
</root>